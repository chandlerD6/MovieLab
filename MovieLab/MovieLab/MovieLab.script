Script started on Sun 04 Dec 2016 12:45:01 PM PST
]0;cditolla@crystalcove:~/hw5[cditolla@crystalcove ~/hw5]$ make
gcc -ansi -Wall -c -g MovieLab.c -o MovieLab.o 
gcc -ansi -Wall -c -g Image.c -o Image.o
gcc -ansi -Wall -c -g ImageList.c -o ImageList.o 
gcc -ansi -Wall -c -g Movie.c -o Movie.o
gcc -ansi -Wall -c -g DIPs.c -o DIPs.o
ar rc libfilter.a Image.o ImageList.o Movie.o DIPs.o
ranlib libfilter.a
gcc -ansi -Wall -c -g FileIO.c -o FileIO.o
ar rc libfileIO.a FileIO.o
ranlib  libfileIO.a
gcc -Wall -g MovieLab.o -lfilter -lfileIO -L. -o MovieLab
]0;cditolla@crystalcove:~/hw5[cditolla@crystalcove ~/hw5]$ ./MovieLanb[K[Kb -h

Usage: MovieLab -i <file> -o <file> -f <framenum> -s <WIDTHxHEIGHT> [options]
Options:
-aging                Activate the aging filter on every movie frame
-hflip                Activate horizontal flip on every movie frame
-edge                 Activate the edge filter on every movie frame
-crop <start-end>     Crop the movie frames from <start> to <end>
-fast <factor>        Fast forward the movie by <factor>
-rvs                  Reverse the frame order of the input movie
-watermark <file>     Add a watermark from <file> to every movie frame
-spotlight <radius>   Spotlight a circle of <radius> on every movie frame
-zoom                 Zoom in and out the input movie
-h                    Display this usage information
]0;cditolla@crystalcove:~/hw5[cditolla@crystalcove ~/hw5]$ ./MovieLab -h[Ki -dive -o -out[K[K[K[K[K[K[K[K[K[K[Kdive -o out -f 50 -s 320x240 -aging -hflip
Operation Aging is done!
Operation Horizontal Flip is done!
The movie file out.yuv has been written successfully!
50 frames are written to the file out.yuv in total.
]0;cditolla@crystalcove:~/hw5[cditolla@crystalcove ~/hw5]$ ./MovieLab -i dive -o out -f 50 -s 320x240 -aging -hflip0[P[P[1@1[1@0[1@0 -s 320x240 -aging -hflip[K[K[K[K[K[K[K[K[K[K[Kedge
Operation Edge is done!
The movie file out.yuv has been written successfully!
100 frames are written to the file out.yuv in total.
]0;cditolla@crystalcove:~/hw5[cditolla@crystalcove ~/hw5]$ ./MovieLab -i dive -o out -f 100 -s 320x240 -edge[P[P[1@8[1@0 -s 320x240 -edge[K[K[K[Kfast 3 -crop 101-160
Operation Crop is done! New number of frames is 120
Operation Fast Forward is done! New number of frames is 40
The movie file out.yuv has been written successfully!
40 frames are written to the file out.yuv in total.
]0;cditolla@crystalcove:~/hw5[cditolla@crystalcove ~/hw5]$ ./MovieLab -i dive -o out -f 180 -s 320x240 -fast 3 -crop 101-1608[P0[1@00 -s 320x240 -fast 3 -crop 101-160[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Krvs
Operation Reverse is done!
The movie file out.yuv has been written successfully!
100 frames are written to the file out.yuv in total.
]0;cditolla@crystalcove:~/hw5[cditolla@crystalcove ~/hw5]$ ./MovieLab -i dive -o out -f 100 -s 320x240 -rvs0[P[P[1@5[1@0[1@v[1@a[1@l[1@g[1@r[1@i[1@n[1@s[P[1@d[1@ ./MovieLab -i dive -o out -f 150 -s 320x240 -rvs[K[K[Kwatermark watermark
==36277== Memcheck, a memory error detector
==36277== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==36277== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==36277== Command: ./MovieLab -i dive -o out -f 150 -s 320x240 -watermark watermark
==36277== 
Operation Watermark is done!
The movie file out.yuv has been written successfully!
150 frames are written to the file out.yuv in total.
==36277== 
==36277== HEAP SUMMARY:
==36277==     in use at exit: 0 bytes in 0 blocks
==36277==   total heap usage: 2,111 allocs, 2,111 frees, 103,810,831 bytes allocated
==36277== 
==36277== All heap blocks were freed -- no leaks are possible
==36277== 
==36277== For counts of detected and suppressed errors, rerun with: -v
==36277== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
]0;cditolla@crystalcove:~/hw5[cditolla@crystalcove ~/hw5]$ valgrind ./MovieLab -i dive -o out -f 150 -s 320x240 -watermark watermark watermark[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kspotlight 100
==36658== Memcheck, a memory error detector
==36658== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==36658== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==36658== Command: ./MovieLab -i dive -o out -f 150 -s 320x240 -spotlight 100
==36658== 
Operation Spotlight is done!
The movie file out.yuv has been written successfully!
150 frames are written to the file out.yuv in total.
==36658== 
==36658== HEAP SUMMARY:
==36658==     in use at exit: 0 bytes in 0 blocks
==36658==   total heap usage: 2,705 allocs, 2,705 frees, 138,351,017 bytes allocated
==36658== 
==36658== All heap blocks were freed -- no leaks are possible
==36658== 
==36658== For counts of detected and suppressed errors, rerun with: -v
==36658== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
]0;cditolla@crystalcove:~/hw5[cditolla@crystalcove ~/hw5]$ valgrind ./MovieLab -i dive -o out -f 150 -s 320x240 -spotlight 100d[P[P[P[P[P[P[P[P [P./MovieLab -i dive -o out -f 15[P0[1@00 -s 320x240 -spotlight 100[K[K[K[K[K[K[K[K[K[K[K[Kzoom
Operation Zoom is done!
The movie file out.yuv has been written successfully!
100 frames are written to the file out.yuv in total.
]0;cditolla@crystalcove:~/hw5[cditolla@crystalcove ~/hw5]$ make clean
rm -f *.o out.yuv MovieLab  libfilter.a libfileIO.a 
]0;cditolla@crystalcove:~/hw5[cditolla@crystalcove ~/hw5]$ exit
exit

Script done on Sun 04 Dec 2016 12:55:23 PM PST
